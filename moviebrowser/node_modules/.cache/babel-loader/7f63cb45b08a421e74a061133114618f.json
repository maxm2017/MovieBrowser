{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmerc\\\\OneDrive\\\\Udemy\\\\2021 FullStack\\\\15. React 201\\\\moviebrowser\\\\src\\\\Components\\\\MovieView.js\",\n    _s = $RefreshSig$();\n\nimport Hero from \"./Hero\";\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MovieView = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const [movieDetails, setMovieDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=471f57e06cd112ed3c463b15140de143&`).then(response => response.json()).then(data => {\n      setMovieDetails(data);\n      setIsLoading(false);\n    });\n  }, id);\n\n  function renderMovieDetails() {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(Hero, {\n        text: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (movieDetails) {\n      return /*#__PURE__*/_jsxDEV(Hero, {\n        text: movieDetails.original_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"renderMovieDetails();\"\n  }, void 0, false);\n};\n\n_s(MovieView, \"5ImSHv/k/CPioqdnOMIadjILE+U=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieView;\nexport default MovieView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieView\");","map":{"version":3,"sources":["C:/Users/mmerc/OneDrive/Udemy/2021 FullStack/15. React 201/moviebrowser/src/Components/MovieView.js"],"names":["Hero","useParams","useEffect","useState","MovieView","id","console","log","movieDetails","setMovieDetails","isLoading","setIsLoading","fetch","then","response","json","data","renderMovieDetails","original_title"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAACC,IAAAA;AAAD,MAAOJ,SAAS,EAAtB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,QAAK,CAACG,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAK,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAAzC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,KAAK,CAAE,sCAAqCP,EAAG,4CAA1C,CAAL,CACCQ,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAE;AACRP,MAAAA,eAAe,CAACO,IAAD,CAAf;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KALD;AAMH,GAPQ,EAONN,EAPM,CAAT;;AASA,WAASY,kBAAT,GACA;AACI,QAAGP,SAAH,EACA;AACI,0BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAG;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;AACD,QAAGF,YAAH,EACA;AACI,0BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAIA,YAAY,CAACU;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ;;AAED,sBACA;AAAA;AAAA,mBADA;AAKD,CApCH;;GAAMd,S;UACWH,S;;;KADXG,S;AAsCJ,eAAeA,SAAf","sourcesContent":["import Hero from \"./Hero\";\r\nimport {useParams} from 'react-router-dom';\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst MovieView = () => {\r\n    const {id} = useParams();\r\n    console.log(id);\r\n    const[movieDetails, setMovieDetails] = useState({})\r\n    const[isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=471f57e06cd112ed3c463b15140de143&`)\r\n        .then(response => response.json())\r\n        .then(data=>{\r\n            setMovieDetails(data);\r\n            setIsLoading(false);\r\n        })\r\n    }, id);\r\n\r\n    function renderMovieDetails()\r\n    {\r\n        if(isLoading)\r\n        {\r\n            return(\r\n                <Hero text = \"Loading...\" />\r\n            )\r\n        }\r\n        if(movieDetails)\r\n        {\r\n            return(\r\n                <Hero text = {movieDetails.original_title}/>\r\n            )\r\n        }\r\n    }\r\n\r\n    return(\r\n    <>\r\n        renderMovieDetails();\r\n    </>\r\n    )\r\n  }\r\n\r\n  export default MovieView;"]},"metadata":{},"sourceType":"module"}