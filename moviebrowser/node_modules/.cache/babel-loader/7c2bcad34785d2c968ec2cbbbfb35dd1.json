{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmerc\\\\OneDrive\\\\Udemy\\\\2021 FullStack\\\\15. React 201\\\\moviebrowser\\\\src\\\\Components\\\\Search.js\";\nimport Hero from \"./Hero\";\nimport { Link } from \"react-router-dom\";\nimport movieIcon from \"./Images/movieIcon.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MovieCard = ({\n  movie\n}) => {\n  var posterUrl = {\n    movieIcon\n  };\n  console.log(movieIcon);\n\n  if (movie.poster_path) {\n    posterUrl = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n  }\n\n  const detailUrl = `/movies/${movie.id}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-lg-3 col-md-3 col-2 my-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: posterUrl,\n        className: \"card-img-top\",\n        alt: movie.original_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: movie.original_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: detailUrl,\n          className: \"btn btn-primary\",\n          children: \"Go somewhere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MovieCard;\n\nconst SearchView = ({\n  keyword,\n  searchResults\n}) => {\n  const title = `You are searching for ${keyword}`;\n  var resultsHTML = \"<></>\";\n\n  if (searchResults) {\n    console.log(searchResults);\n    resultsHTML = searchResults.map((obj, i) => {\n      return /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: obj\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 24\n      }, this);\n    });\n  } else {\n    console.log(searchResults);\n    resultsHTML = \"Type to search\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      text: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), resultsHTML && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: resultsHTML\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = SearchView;\nexport default SearchView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MovieCard\");\n$RefreshReg$(_c2, \"SearchView\");","map":{"version":3,"sources":["C:/Users/mmerc/OneDrive/Udemy/2021 FullStack/15. React 201/moviebrowser/src/Components/Search.js"],"names":["Hero","Link","movieIcon","MovieCard","movie","posterUrl","console","log","poster_path","detailUrl","id","original_title","SearchView","keyword","searchResults","title","resultsHTML","map","obj","i"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;;AACA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAE3B,MAAIC,SAAS,GAAG;AAACH,IAAAA;AAAD,GAAhB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;;AAEA,MAAGE,KAAK,CAACI,WAAT,EACA;AACIH,IAAAA,SAAS,GAAI,mCAAkCD,KAAK,CAACI,WAAY,EAAjE;AACH;;AACD,QAAMC,SAAS,GAAI,WAAUL,KAAK,CAACM,EAAG,EAAtC;AACA,sBACA;AAAK,IAAA,SAAS,EAAG,8BAAjB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEL,SAAV;AAAqB,QAAA,SAAS,EAAC,cAA/B;AAA8C,QAAA,GAAG,EAAED,KAAK,CAACO;AAAzD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BP,KAAK,CAACO;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAEF,SAAV;AAAqB,UAAA,SAAS,EAAC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAYH,CAtBD;;KAAMN,S;;AAwBN,MAAMS,UAAU,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAA8B;AAC7C,QAAMC,KAAK,GAAI,yBAAwBF,OAAQ,EAA/C;AACA,MAAIG,WAAW,GAAG,OAAlB;;AACI,MAAGF,aAAH,EACA;AACIR,IAAAA,OAAO,CAACC,GAAR,CAAYO,aAAZ;AACAE,IAAAA,WAAW,GAAGF,aAAa,CAACG,GAAd,CAAkB,CAACC,GAAD,EAAKC,CAAL,KAAU;AACtC,0BAAO,QAAC,SAAD;AAAW,QAAA,KAAK,EAAID;AAApB,SAAgCC,CAAhC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFa,CAAd;AAGH,GAND,MAQA;AACIb,IAAAA,OAAO,CAACC,GAAR,CAAYO,aAAZ;AACAE,IAAAA,WAAW,GAAG,gBAAd;AACH;;AAED,sBACI;AAAA,4BACA,QAAC,IAAD;AAAM,MAAA,IAAI,EAAID;AAAd;AAAA;AAAA;AAAA;AAAA,YADA,EAECC,WAAW,iBACR;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAG,KAAjB;AAAA,kBACKA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAYP,CA5BD;;MAAMJ,U;AA8BN,eAAeA,UAAf","sourcesContent":["import Hero from \"./Hero\";\r\nimport { Link } from \"react-router-dom\";\r\nimport movieIcon from \"./Images/movieIcon.jpg\";\r\nconst MovieCard = ({movie}) => {\r\n\r\n    var posterUrl = {movieIcon};\r\n    console.log(movieIcon);\r\n\r\n    if(movie.poster_path)\r\n    {\r\n        posterUrl = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\r\n    }\r\n    const detailUrl = `/movies/${movie.id}`\r\n    return(\r\n    <div className = \"col-lg-3 col-md-3 col-2 my-4\">\r\n        <div className=\"card\">\r\n            <img src={posterUrl} className=\"card-img-top\" alt={movie.original_title} />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{movie.original_title}</h5>\r\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                <Link to={detailUrl} className=\"btn btn-primary\">Go somewhere</Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst SearchView = ({keyword, searchResults}) => {\r\n    const title = `You are searching for ${keyword}`;\r\n    var resultsHTML = \"<></>\";\r\n        if(searchResults)\r\n        {\r\n            console.log(searchResults);\r\n            resultsHTML = searchResults.map((obj,i) =>{\r\n                return <MovieCard movie = {obj} key = {i}/>\r\n            })\r\n        }\r\n        else\r\n        {\r\n            console.log(searchResults);\r\n            resultsHTML = \"Type to search\";\r\n        }\r\n    \r\n        return (\r\n            <>\r\n            <Hero text = {title}/>\r\n            {resultsHTML &&\r\n                <div className = \"container\">\r\n                    <div className = \"row\">\r\n                        {resultsHTML}\r\n                    </div>\r\n                </div>\r\n            }\r\n            </>\r\n        )\r\n}\r\n\r\nexport default SearchView;"]},"metadata":{},"sourceType":"module"}